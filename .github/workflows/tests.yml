name: SentinelWP Tests

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [7.4, 8.0, 8.1, 8.2, 8.3]
    
    name: PHP ${{ matrix.php-version }} Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: json, mbstring, curl
        ini-values: post_max_size=256M, upload_max_filesize=256M, max_execution_time=300
        coverage: none
        
    - name: Validate PHP syntax
      run: find . -type f -name "*.php" -exec php -l {} \; | grep -v "No syntax errors detected"
      continue-on-error: true
      
    - name: Check test files exist
      run: |
        if [ ! -f "tests/run-tests.php" ]; then
          echo "❌ Test runner not found!"
          exit 1
        fi
        if [ ! -f "tests/fixtures/gemini-responses.json" ]; then
          echo "❌ Test fixtures not found!"
          exit 1
        fi
        echo "✅ Test files found"
        
    - name: Run All Tests
      id: all_tests
      run: |
        cd tests
        echo "Running complete test suite..."
        php run-tests.php > test_output.log 2>&1
        cat test_output.log
        
        # Extract results from output
        if grep -q "Overall Result: ✓ ALL TESTS PASSED" test_output.log; then
          echo "all_tests_status=passed" >> $GITHUB_OUTPUT
        else
          echo "all_tests_status=failed" >> $GITHUB_OUTPUT
        fi
        
        # Extract statistics
        TOTAL_TESTS=$(grep "TOTALS" test_output.log | grep -o "[0-9]* tests" | head -1 | grep -o "[0-9]*")
        PASSED_TESTS=$(grep "TOTALS" test_output.log | grep -o "[0-9]* passed" | head -1 | grep -o "[0-9]*")
        FAILED_TESTS=$(grep "TOTALS" test_output.log | grep -o "[0-9]* failed" | head -1 | grep -o "[0-9]*")
        SUCCESS_RATE=$(grep "Success Rate:" test_output.log | grep -o "[0-9.]*%")
        
        echo "total_tests=${TOTAL_TESTS:-0}" >> $GITHUB_OUTPUT
        echo "passed_tests=${PASSED_TESTS:-0}" >> $GITHUB_OUTPUT
        echo "failed_tests=${FAILED_TESTS:-0}" >> $GITHUB_OUTPUT
        echo "success_rate=${SUCCESS_RATE:-0%}" >> $GITHUB_OUTPUT
        
    - name: Run AI Recommendations Tests
      id: ai_tests
      run: |
        cd tests
        echo "Running AI Recommendations test suite..."
        php run-tests.php ai > ai_test_output.log 2>&1
        cat ai_test_output.log
        
        if grep -q "✓.*AI.*tests completed" ai_test_output.log; then
          echo "ai_tests_status=completed" >> $GITHUB_OUTPUT
        else
          echo "ai_tests_status=failed" >> $GITHUB_OUTPUT
        fi
        
    - name: Run Attack Detection Tests
      id: attack_tests
      run: |
        cd tests
        echo "Running Attack Detection test suite..."
        php run-tests.php attack > attack_test_output.log 2>&1
        cat attack_test_output.log
        
        if grep -q "✓.*Attack.*tests completed" attack_test_output.log; then
          echo "attack_tests_status=completed" >> $GITHUB_OUTPUT
        else
          echo "attack_tests_status=failed" >> $GITHUB_OUTPUT
        fi
        
    - name: Generate Test Report
      if: always()
      run: |
        cd tests
        echo "Generating HTML test report..."
        php run-tests.php --generate-report
        ls -la test-report.html || echo "Report generation failed"
        
    - name: Upload Test Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-report-php-${{ matrix.php-version }}
        path: tests/test-report.html
        retention-days: 30
        
    - name: Upload Test Logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs-php-${{ matrix.php-version }}
        path: tests/*.log
        retention-days: 7

    - name: Test Results Summary
      if: always()
      run: |
        echo "## 🧪 Test Results Summary (PHP ${{ matrix.php-version }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| Total Tests | ${{ steps.all_tests.outputs.total_tests }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Passed Tests | ${{ steps.all_tests.outputs.passed_tests }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Failed Tests | ${{ steps.all_tests.outputs.failed_tests }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Success Rate | ${{ steps.all_tests.outputs.success_rate }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| AI Recommendations | ${{ steps.ai_tests.outputs.ai_tests_status }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Attack Detection | ${{ steps.attack_tests.outputs.attack_tests_status }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.all_tests.outputs.all_tests_status }}" = "passed" ]; then
          echo "✅ **All tests passed successfully!**" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Some tests failed. Check the logs for details.**" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Comment Test Results on PR
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v6
      with:
        script: |
          const testStatus = '${{ steps.all_tests.outputs.all_tests_status }}';
          const totalTests = '${{ steps.all_tests.outputs.total_tests }}' || '0';
          const passedTests = '${{ steps.all_tests.outputs.passed_tests }}' || '0';
          const failedTests = '${{ steps.all_tests.outputs.failed_tests }}' || '0';
          const successRate = '${{ steps.all_tests.outputs.success_rate }}' || '0%';
          const phpVersion = '${{ matrix.php-version }}';
          
          const statusIcon = testStatus === 'passed' ? '✅' : '❌';
          const statusText = testStatus === 'passed' ? 'All tests passed' : 'Some tests failed';
          
          const comment = `## ${statusIcon} SentinelWP Test Results (PHP ${phpVersion})

          **Status:** ${statusText}
          
          | Metric | Value |
          |--------|-------|
          | Total Tests | ${totalTests} |
          | Passed Tests | ${passedTests} |
          | Failed Tests | ${failedTests} |
          | Success Rate | ${successRate} |
          
          | Test Suite | Status |
          |------------|--------|
          | AI Recommendations | ${{ steps.ai_tests.outputs.ai_tests_status }} |
          | Attack Detection | ${{ steps.attack_tests.outputs.attack_tests_status }} |
          
          📊 [View detailed test report in artifacts](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
          
          ---
          *Automated test results from GitHub Actions*`;
          
          // Only comment if this is the first PHP version to avoid spam
          if (phpVersion === '8.1') {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }

  # Code Quality Checks
  quality:
    runs-on: ubuntu-latest
    name: Code Quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        extensions: json, mbstring, curl
        
    - name: Check file structure
      run: |
        echo "Checking plugin file structure..."
        
        # Required files
        required_files=("sentinelwp.php" "README.md")
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "❌ Missing required file: $file"
            exit 1
          else
            echo "✅ Found: $file"
          fi
        done
        
        # Required directories
        required_dirs=("includes" "tests" "tests/fixtures")
        for dir in "${required_dirs[@]}"; do
          if [ ! -d "$dir" ]; then
            echo "❌ Missing required directory: $dir"
            exit 1
          else
            echo "✅ Found: $dir"
          fi
        done
        
    - name: Validate plugin header
      run: |
        echo "Validating WordPress plugin header..."
        if ! head -20 sentinelwp.php | grep -q "Plugin Name:"; then
          echo "❌ Plugin header missing or invalid"
          exit 1
        fi
        echo "✅ Plugin header is valid"
        
    - name: Check for security issues
      run: |
        echo "Checking for common security issues..."
        
        # Check for direct PHP access
        if ! grep -r "defined.*ABSPATH.*exit" --include="*.php" . > /dev/null; then
          echo "⚠️  Warning: Some PHP files may not have ABSPATH protection"
        else
          echo "✅ ABSPATH protection found"
        fi
        
        # Check for proper escaping (basic check)
        if grep -r "echo.*\$_" --include="*.php" includes/ > /dev/null; then
          echo "⚠️  Warning: Potential unescaped output found"
        else
          echo "✅ No obvious unescaped output detected"
        fi

  # Test Report Consolidation
  consolidate:
    runs-on: ubuntu-latest
    needs: [test, quality]
    if: always()
    name: Consolidate Results
    
    steps:
    - name: Download all test reports
      uses: actions/download-artifact@v4
      with:
        path: test-reports
        
    - name: Create consolidated report
      run: |
        echo "# 🧪 SentinelWP Test Suite Results" > consolidated-report.md
        echo "" >> consolidated-report.md
        echo "**Test Run:** $(date)" >> consolidated-report.md
        echo "**Repository:** ${{ github.repository }}" >> consolidated-report.md
        echo "**Branch:** ${{ github.ref_name }}" >> consolidated-report.md
        echo "**Commit:** ${{ github.sha }}" >> consolidated-report.md
        echo "" >> consolidated-report.md
        
        echo "## Test Matrix Results" >> consolidated-report.md
        echo "" >> consolidated-report.md
        echo "| PHP Version | Status | Notes |" >> consolidated-report.md
        echo "|-------------|--------|-------|" >> consolidated-report.md
        
        # Check each PHP version result
        for version in 7.4 8.0 8.1 8.2 8.3; do
          if [ -d "test-reports/test-report-php-$version" ]; then
            echo "| $version | ✅ Completed | Report available |" >> consolidated-report.md
          else
            echo "| $version | ❌ Failed | No report generated |" >> consolidated-report.md
          fi
        done
        
        echo "" >> consolidated-report.md
        echo "## Summary" >> consolidated-report.md
        echo "" >> consolidated-report.md
        echo "- **Test Suites:** AI Recommendations, Attack Detection" >> consolidated-report.md
        echo "- **Coverage:** Unit tests with mocked WordPress functions" >> consolidated-report.md
        echo "- **Artifacts:** HTML reports available for 30 days" >> consolidated-report.md
        echo "" >> consolidated-report.md
        echo "---" >> consolidated-report.md
        echo "*Generated by GitHub Actions*" >> consolidated-report.md
        
    - name: Upload consolidated report
      uses: actions/upload-artifact@v4
      with:
        name: consolidated-test-report
        path: consolidated-report.md
        retention-days: 90
