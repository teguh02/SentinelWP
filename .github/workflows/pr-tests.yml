name: PR Tests

on:
  pull_request:
    branches: [ main, development ]
    types: [opened, synchronize, reopened]

jobs:
  pr-tests:
    runs-on: ubuntu-latest
    name: Pull Request Tests
    
    steps:
    - name: Checkout PR code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        extensions: json, mbstring, curl
        
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v39
      with:
        files: |
          *.php
          includes/**/*.php
          tests/**/*.php
          
    - name: Show changed files
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "🔄 Changed PHP files in this PR:"
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "  - $file"
        done
        
    - name: Syntax check changed files
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "🔍 Checking syntax of changed files..."
        has_errors=false
        
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          if [[ $file == *.php ]]; then
            echo "Checking: $file"
            if ! php -l "$file"; then
              has_errors=true
            fi
          fi
        done
        
        if $has_errors; then
          echo "❌ Syntax errors found in changed files"
          exit 1
        else
          echo "✅ All changed files have valid PHP syntax"
        fi
        
    - name: Run full test suite
      id: tests
      run: |
        cd tests
        echo "🧪 Running complete test suite for PR..."
        
        # Run tests with detailed output
        php run-tests.php --verbose > pr_test_results.log 2>&1
        exit_code=$?
        
        # Always show the results
        cat pr_test_results.log
        
        # Extract key metrics
        TOTAL_TESTS=$(grep "TOTALS" pr_test_results.log | grep -o "[0-9]* tests" | head -1 | grep -o "[0-9]*" || echo "0")
        PASSED_TESTS=$(grep "TOTALS" pr_test_results.log | grep -o "[0-9]* passed" | head -1 | grep -o "[0-9]*" || echo "0")
        FAILED_TESTS=$(grep "TOTALS" pr_test_results.log | grep -o "[0-9]* failed" | head -1 | grep -o "[0-9]*" || echo "0")
        
        echo "total_tests=$TOTAL_TESTS" >> $GITHUB_OUTPUT
        echo "passed_tests=$PASSED_TESTS" >> $GITHUB_OUTPUT  
        echo "failed_tests=$FAILED_TESTS" >> $GITHUB_OUTPUT
        
        if [ $exit_code -eq 0 ] && [ "$FAILED_TESTS" -eq 0 ]; then
          echo "test_status=success" >> $GITHUB_OUTPUT
        else
          echo "test_status=failure" >> $GITHUB_OUTPUT
        fi
        
        exit $exit_code
        
    - name: Generate test report
      if: always()
      run: |
        cd tests
        php run-tests.php --generate-report
        
    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: pr-test-results
        path: |
          tests/pr_test_results.log
          tests/test-report.html
        retention-days: 14
        
    - name: Post PR comment with results
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const testStatus = '${{ steps.tests.outputs.test_status }}';
          const totalTests = '${{ steps.tests.outputs.total_tests }}' || '0';
          const passedTests = '${{ steps.tests.outputs.passed_tests }}' || '0';
          const failedTests = '${{ steps.tests.outputs.failed_tests }}' || '0';
          
          // Calculate success rate
          const successRate = totalTests > 0 ? Math.round((passedTests / totalTests) * 100) : 0;
          
          // Status formatting
          const statusIcon = testStatus === 'success' ? '✅' : '❌';
          const statusText = testStatus === 'success' ? 'All tests passed!' : 'Some tests failed';
          const statusColor = testStatus === 'success' ? '28a745' : 'dc3545';
          
          // Create progress bar for visual representation
          const progressBar = '█'.repeat(Math.floor(successRate / 10)) + '░'.repeat(10 - Math.floor(successRate / 10));
          
          const comment = `## ${statusIcon} SentinelWP Test Results
          
          ![Test Status](https://img.shields.io/badge/Tests-${statusText.replace(' ', '%20')}-${statusColor})
          ![Success Rate](https://img.shields.io/badge/Success%20Rate-${successRate}%25-${statusColor})
          
          ### 📊 Test Summary
          
          \`\`\`
          ${progressBar} ${successRate}%
          \`\`\`
          
          | Metric | Count | Status |
          |--------|-------|--------|
          | **Total Tests** | ${totalTests} | - |
          | **Passed** | ${passedTests} | ✅ |
          | **Failed** | ${failedTests} | ${failedTests > 0 ? '❌' : '✅'} |
          
          ### 🧪 Test Suites
          
          - **AI Recommendations**: Tests Gemini API integration and recommendation processing
          - **Attack Detection**: Tests security monitoring and threat detection
          
          ${failedTests > 0 ? '⚠️ **Some tests failed.** Please review the test output and fix any issues before merging.' : '🎉 **All tests passed!** This PR is ready for review.'}
          
          ---
          
          📋 [View detailed test report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) | 🔄 Run ID: ${{ github.run_id }}
          
          <sub>Automated test results for commit ${{ github.sha }}</sub>`;
          
          // Post comment
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Update PR status
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const testStatus = '${{ steps.tests.outputs.test_status }}';
          const state = testStatus === 'success' ? 'success' : 'failure';
          const description = testStatus === 'success' ? 
            'All SentinelWP tests passed' : 
            'Some SentinelWP tests failed';
          
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: state,
            target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
            description: description,
            context: 'SentinelWP Tests'
          });
          
    - name: Fail if tests failed
      if: steps.tests.outputs.test_status == 'failure'
      run: |
        echo "❌ Tests failed - blocking PR merge"
        exit 1
